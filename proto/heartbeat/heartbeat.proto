syntax = "proto3";

option java_multiple_files = true;
option java_package = "net.heartbeat";
option java_outer_classname = "HeartBeatProto";

package heartbeat;

// A HeartBeatRequest is a message that request for the health status of remote server.
//
// Service should be the name of the service at remote and be null when standing for all.
message HeartBeatRequest {
  string service = 1;
}

// HeartBeatResponse is a message received in response to a CheckHealth RPC.
//
// It contains the status of remote services.
// If the service name can be found in the registry, a response must be sent back with an OK
// status and the status field should be set to SERVING or NOT_SERVING accordingly.
// If the service name is not registered, the server returns a NOT_FOUND grpc status.
message HeartBeatResponse {
  enum ServingStatus {
    UNKNOMN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

// Interface of HeartBeat service.
service HeartBeat {
  // A bidirectional streaming RPC.
  //
  // Accepts a stream of the HeartBeatRequests sent while a node is up,
  // and receives a HeartBeatResponse after each HeartBeat.
  rpc CheckHealth(stream HeartBeatRequest) returns (stream HeartBeatResponse) {}
}
